% Encoding: UTF-8

@article{Wachter2006,
	title = {On the implementation of an interior-point filter line-search algorithm for large-scale nonlinear programming},
	volume = {106},
	issn = {0025-5610, 1436-4646},
	url = {https://link.springer.com/article/10.1007/s10107-004-0559-y},
	doi = {10.1007/s10107-004-0559-y},
	abstract = {.We present a primal-dual interior-point algorithm with a filter line-search method for nonlinear programming. Local and global convergence properties of this method were analyzed in previous work. Here we provide a comprehensive description of the algorithm, including the feasibility restoration phase for the filter method, second-order corrections, and inertia correction of the KKT matrix. Heuristics are also considered that allow faster performance. This method has been implemented in the IPOPT code, which we demonstrate in a detailed numerical study based on 954 problems from the CUTEr test set. An evaluation is made of several line-search options, and a comparison is provided with two state-of-the-art interior-point codes for nonlinear programming.},
	language = {en},
	number = {1},
	urldate = {2017-06-04},
	journal = {Mathematical Programming},
	author = {W√§chter, Andreas and Biegler, Lorenz T.},
	month = mar,
	year = {2006},
	pages = {25--57},
	file = {Snapshot:/home/moorepants/.zotero/zotero/i3casg4l.default/zotero/storage/BXHHBJZW/10.html:text/html}
}

@book{Betts2010,
	series = {Advances in {Design} and {Control}},
	title = {Practical {Methods} for {Optimal} {Control} and {Estimation} {Using} {Nonlinear} {Programming}},
	isbn = {978-0-89871-688-7},
	url = {http://epubs.siam.org/doi/book/10.1137/1.9780898718577},
	abstract = {Solving an optimal control or estimation problem is not easy. Pieces of the puzzle are found scattered throughout many different disciplines. Furthermore, the focus of this book is on practical methods, that is, methods that I have found actually work! In fact everything described in this book has been implemented in production software and used to solve real optimal control problems. Although the reader should be proficient in advanced mathematics, no theorems are presented. Traditionally, there are two major parts of a successful optimal control or optimal estimation solution technique. The first part is the ‚Äúoptimization‚Äù method. The second part is the ‚Äúdifferential equation‚Äù method. When faced with an optimal control or estimation problem it is tempting to simply ‚Äúpaste‚Äù together packages for optimization and numerical integration. While naive approaches such as this may be moderately successful, the goal of this book is to suggest that there is a better way! The methods used to solve the differential equations and optimize the functions are intimately related. The first two chapters of this book focus on the optimization part of the problem. In Chapter 1 the important concepts of nonlinear programming for small dense applications are introduced. Chapter 2 extends the presentation to problems which are both large and sparse. Chapters 3 and 4 address the differential equation part of the problem. Chapter 3 introduces relevant material in the numerical solution of differential (and differentialalgebraic) equations. Methods for solving the optimal control problem are treated in some detail in Chapter 4. Throughout the book the interaction between optimization and integration is emphasized. Chapter 5 describes how to solve optimal estimation problems. Chapter 6 presents a collection of examples that illustrate the various concepts and techniques. Real world problems often require solving a sequence of optimal control and/or optimization problems, and Chapter 7 describes a collection of these ‚Äúadvanced applications.‚Äù While the book incorporates a great deal of new material not covered in Practical Methods for Optimal Control Using Nonlinear Programming [21], it does not cover everything. Many important topics are simply not discussed in order to keep the overall presentation concise and focused. The discussion is general and presents a unified approach to solving optimal estimation and control problems. Most of the examples are drawn from my experience in the aerospace industry. Examples have been solved using a particular implementation called  ùïäùïÜ‚ÑÇùïä.SOCS.{\textless}math display="inline" overflow="scroll"{\textgreater} {\textless}mrow{\textgreater}{\textless}mi mathvariant="double-struck"{\textgreater}SOCS{\textless}/mi{\textgreater}{\textless}mo{\textgreater}.{\textless}/mo{\textgreater}{\textless}/mrow{\textgreater} {\textless}/math{\textgreater}  I have tried to adhere to notational conventions from both optimization and control theory whenever possible. Also, I have attempted to use consistent notation throughout the book.},
	urldate = {2017-06-04},
	publisher = {Society for Industrial and Applied Mathematics},
	author = {Betts, J.},
	month = jan,
	year = {2010},
	note = {DOI: 10.1137/1.9780898718577
DOI: 10.1137/1.9780898718577},
	file = {Snapshot:/home/moorepants/.zotero/zotero/i3casg4l.default/zotero/storage/JD2TQH5V/1.html:text/html}
}

@article{Meurer2017,
	title = {{SymPy}: symbolic computing in {Python}},
	volume = {3},
	issn = {2376-5992},
	shorttitle = {{SymPy}},
	url = {https://peerj.com/articles/cs-103},
	doi = {10.7717/peerj-cs.103},
	abstract = {SymPy is an open source computer algebra system written in pure Python. It is built with a focus on extensibility and ease of use, through both interactive and programmatic applications. These characteristics have led SymPy to become a popular symbolic library for the scientific Python ecosystem. This paper presents the architecture of SymPy, a description of its features, and a discussion of select submodules. The supplementary material provide additional examples and further outline details of the architecture and features of SymPy.},
	language = {en},
	urldate = {2017-06-04},
	journal = {PeerJ Computer Science},
	author = {Meurer, Aaron and Smith, Christopher P. and Paprocki, Mateusz and ƒåert√≠k, Ond≈ôej and Kirpichev, Sergey B. and Rocklin, Matthew and Kumar, AMiT and Ivanov, Sergiu and Moore, Jason K. and Singh, Sartaj and Rathnayake, Thilina and Vig, Sean and Granger, Brian E. and Muller, Richard P. and Bonazzi, Francesco and Gupta, Harsh and Vats, Shivam and Johansson, Fredrik and Pedregosa, Fabian and Curry, Matthew J. and Terrel, Andy R. and Rouƒçka, ≈†tƒõp√°n and Saboo, Ashutosh and Fernando, Isuru and Kulal, Sumith and Cimrman, Robert and Scopatz, Anthony},
	month = jan,
	year = {2017},
	pages = {e103},
	file = {Meurer et al. - 2017 - SymPy symbolic computing in Python.pdf:/home/moorepants/.zotero/zotero/i3casg4l.default/zotero/storage/ZFQZJHNZ/Meurer et al. - 2017 - SymPy symbolic computing in Python.pdf:application/pdf;Snapshot:/home/moorepants/.zotero/zotero/i3casg4l.default/zotero/storage/I7788NW9/cs-103.html:text/html}
}

@article{Behnel2011,
	title = {Cython: {The} {Best} of {Both} {Worlds}},
	volume = {13},
	issn = {1521-9615},
	doi = {10.1109/MCSE.2010.118},
	number = {2},
	journal = {Computing in Science Engineering},
	author = {Behnel, S. and Bradshaw, R. and Citro, C. and Dalcin, L. and Seljebotn, D.S. and Smith, K.},
	month = apr,
	year = {2011},
	keywords = {C language, Cython language, Fortran code, numerical analysis, numerical loops, programming language, Python language extension},
	pages = {31 --39}
}
@misc{Cyipopt2017,
	title = {cyipopt:  {Cython} interface for the interior point optimzer {IPOPT}},
	author = {{cyipopt Developers}},
	year = {2017}
}

@InProceedings{Wang2017,
  author    = {Huawei Wang and Anne Koelewijn and Antonie van den Bogert},
  title     = {RAMP PERTURBATION TESTS ARE TOO SIMPLE TO IDENTIFY A REALISTIC CONTROLLER IN HUMAN STANDING BALANCE},
  booktitle = {Dynamic Walking},
  year      = {2017},
  url       = {http://ruina.tam.cornell.edu/dynwalk17abstracts/258-Anne%20Koelewijn%20-%20HuaweiAbstract.pdf},
}

@Comment{jabref-meta: databaseType:bibtex;}
